{"ast":null,"code":"var _jsxFileName = \"/Users/ripperoni/Documents/Web/Web Development/we-rec/src/components/pages/ConfigurationPage.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../globalState/hooks\";\nimport { addFeed, editFeed } from \"../../globalState/reducerActions\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConfigurationPage(props) {\n  _s();\n\n  const data = useAppSelector(state => state.currentDetailedPage);\n  const myFeeds = useAppSelector(state => state.myFeeds);\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const [keywords, setKeywords] = useState(props.action === \"add\" ? [] : data.keywords);\n  let [selectedKeyword, setSelectedKeyword] = useState(keywords[0]);\n  const [name, setName] = useState(props.action === \"add\" ? \"\" : data.title);\n  const [description, setDescription] = useState(props.action === \"add\" ? \"\" : data.description);\n  const [numberOfVideosPerRequest, setNumberOfVideosPerRequest] = useState(selectedKeyword.numberOfVideosPerRequest);\n  let selectedKeywordIndex = 0;\n\n  function onChangeNumber(event) {\n    setNumberOfVideosPerRequest(Number(event.target.value));\n  }\n\n  const [sourceLinks, setSourceLinks] = useState(selectedKeyword.sourceLinks);\n  const [sourceLink, setSourceLInk] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\");\n  const [isOnMainPage, setIsOnMainPage] = useState(true);\n\n  function togglePage() {\n    setIsOnMainPage(!isOnMainPage);\n  }\n\n  function onChangeName(event) {\n    setName(event.target.value);\n  }\n\n  function onChangeDescription(event) {\n    setDescription(event.target.value);\n  }\n\n  function onChangeSourceLink(event) {\n    setSourceLInk(event.target.value);\n  }\n\n  function onChangeKeyword(event) {\n    setKeyword(event.target.value);\n  }\n\n  function addKeyword() {\n    if (keyword.length === 0) {\n      alert(\"link should not be empty!\");\n      return;\n    }\n\n    keywords.forEach(item => {\n      if (item.keyword === keyword) {\n        alert(\"Don't add the same link\");\n        return;\n      }\n    });\n\n    if (keywords.length > 0) {\n      setKeywords([...keywords, {\n        keyword: keyword,\n        numberOfVideosPerRequest: 0,\n        sourceLinks: []\n      }]);\n    } else {\n      setKeywords([{\n        keyword: keyword,\n        numberOfVideosPerRequest: 0,\n        sourceLinks: []\n      }]);\n    }\n\n    setKeyword(\"\");\n  }\n\n  function deleteKeyword(e) {\n    const index = Number(e.target.id);\n    setKeywords([...keywords.slice(0, index), ...keywords.slice(index + 1)]);\n  }\n\n  function editKeyword(keyword, index) {\n    setKeywords([...keywords.slice(0, index), keyword, ...keywords.slice(index + 1)]);\n  }\n\n  function addSourceLink() {\n    if (sourceLink.length === 0) {\n      alert(\"link should not be empty!\");\n      return;\n    }\n\n    if (sourceLinks.includes(sourceLink)) {\n      alert(\"Don't add the same link\");\n      return;\n    }\n\n    if (sourceLinks.length > 0) {\n      setSourceLinks([...sourceLinks, sourceLink]);\n    } else {\n      setSourceLinks([sourceLink]);\n    }\n\n    setSourceLInk(\"\");\n  }\n\n  function deleteSourceLink(e) {\n    const index = Number(e.target.id);\n    setSourceLinks([...sourceLinks.slice(0, index), ...sourceLinks.slice(index + 1)]);\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n  }\n\n  if (isOnMainPage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Configure your feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: \"left\"\n            },\n            onSubmit: e => submitHandler(e),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: \"form-label\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), props.action === \"edit\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"name\",\n                name: \"name\",\n                onChange: onChangeName,\n                value: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"name\",\n                name: \"name\",\n                onChange: onChangeName,\n                value: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                className: \"form-label\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), props.action === \"edit\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                id: \"description\",\n                name: \"description\",\n                rows: 4,\n                value: description,\n                onChange: onChangeDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                id: \"description\",\n                name: \"description\",\n                rows: 4,\n                onChange: onChangeDescription,\n                value: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn custom-button\",\n              style: {\n                margin: \"20px 0\"\n              },\n              onClick: () => {\n                if (name.length === 0 || description.length === 0 || keywords.length === 0) {\n                  alert(\"Fill out all the required fields\");\n                  return;\n                }\n\n                if (props.action === \"add\") {\n                  dispatch(addFeed({\n                    id: myFeeds.length,\n                    title: name,\n                    description: description,\n                    // numberOfVideosPerRequest: numberOfVideosPerRequest,\n                    keywords: keywords // sourceLinks: sourceLinks,\n\n                  }));\n                } else if (props.action === \"edit\") {\n                  dispatch(editFeed({\n                    id: data.id,\n                    title: name,\n                    description: description,\n                    // numberOfVideosPerRequest: numberOfVideosPerRequest,\n                    keywords: keywords // sourceLinks: sourceLinks,\n\n                  }));\n                }\n\n                navigate(\"/\");\n              },\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: \"left\"\n            },\n            onSubmit: e => submitHandler(e),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"source\",\n                className: \"form-label\",\n                children: \"configuration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"source\",\n                name: \"source\",\n                value: keyword,\n                onChange: onChangeKeyword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn custom-button\",\n              style: {\n                margin: \"20px 0\"\n              },\n              onClick: addKeyword,\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Configurations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: \"left\"\n            },\n            onSubmit: e => submitHandler(e),\n            children: keywords.map((item, ind) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://cdn-icons-png.flaticon.com/512/1214/1214428.png?w=360\",\n                  width: \"22px\",\n                  style: {\n                    margin: \"0px 10px\"\n                  },\n                  alt: \"img\",\n                  id: ind + \"\",\n                  onClick: e => deleteKeyword(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    borderBottom: \"1px solid rgb(50, 191, 243)\"\n                  },\n                  onClick: () => {\n                    setSelectedKeyword(item);\n                    togglePage();\n                    selectedKeywordIndex = ind;\n                  },\n                  children: item.keyword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          textAlign: \"left\"\n        },\n        onSubmit: e => submitHandler(e),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"numberOfRequests\",\n            className: \"form-label\",\n            children: \"Number of requests per video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), props.action === \"edit\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            id: \"numberOfRequests\",\n            name: \"numberOfRequests\",\n            value: numberOfVideosPerRequest,\n            onChange: onChangeNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            id: \"numberOfRequests\",\n            name: \"numberOfRequests\",\n            onChange: onChangeNumber,\n            value: numberOfVideosPerRequest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          textAlign: \"left\"\n        },\n        onSubmit: e => submitHandler(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"source\",\n            className: \"form-label\",\n            children: \"source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"source\",\n            name: \"source\",\n            value: sourceLink,\n            onChange: onChangeSourceLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn custom-button\",\n          style: {\n            margin: \"20px 0\"\n          },\n          onClick: addSourceLink,\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"sources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          textAlign: \"left\"\n        },\n        onSubmit: e => submitHandler(e),\n        children: [sourceLinks.map((item, ind) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.flaticon.com/512/1214/1214428.png?w=360\",\n              width: \"22px\",\n              style: {\n                margin: \"0px 10px\"\n              },\n              alt: \"img\",\n              id: ind + \"\",\n              onClick: e => deleteSourceLink(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                borderBottom: \"1px solid rgb(50, 191, 243)\"\n              },\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn custom-button\",\n          style: {\n            margin: \"20px 0\"\n          },\n          onClick: () => {\n            const newKeyword = {\n              keyword: selectedKeyword.keyword,\n              numberOfVideosPerRequest: numberOfVideosPerRequest,\n              sourceLinks: sourceLinks\n            };\n            editKeyword(newKeyword, selectedKeywordIndex);\n          },\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(ConfigurationPage, \"4v8kh8VJGk0bRf0ZtsSlzoDRGxg=\", false, function () {\n  return [useAppSelector, useAppSelector, useNavigate, useAppDispatch];\n});\n\n_c = ConfigurationPage;\nexport default ConfigurationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigurationPage\");","map":{"version":3,"names":["React","useAppSelector","useAppDispatch","addFeed","editFeed","useState","useNavigate","ConfigurationPage","props","data","state","currentDetailedPage","myFeeds","navigate","dispatch","keywords","setKeywords","action","selectedKeyword","setSelectedKeyword","name","setName","title","description","setDescription","numberOfVideosPerRequest","setNumberOfVideosPerRequest","selectedKeywordIndex","onChangeNumber","event","Number","target","value","sourceLinks","setSourceLinks","sourceLink","setSourceLInk","keyword","setKeyword","isOnMainPage","setIsOnMainPage","togglePage","onChangeName","onChangeDescription","onChangeSourceLink","onChangeKeyword","addKeyword","length","alert","forEach","item","deleteKeyword","e","index","id","slice","editKeyword","addSourceLink","includes","deleteSourceLink","submitHandler","preventDefault","textAlign","margin","map","ind","borderBottom","newKeyword"],"sources":["/Users/ripperoni/Documents/Web/Web Development/we-rec/src/components/pages/ConfigurationPage.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../globalState/hooks\";\nimport { addFeed, editFeed } from \"../../globalState/reducerActions\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Keyword } from \"../interfaces/Feed\";\n\ninterface ConfigurationPage {\n  action: \"add\" | \"edit\";\n}\n\nfunction ConfigurationPage(props: ConfigurationPage) {\n  const data = useAppSelector((state) => state.currentDetailedPage);\n  const myFeeds = useAppSelector((state) => state.myFeeds);\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const [keywords, setKeywords] = useState<Keyword[]>(\n    props.action === \"add\" ? [] : data.keywords\n  );\n  let [selectedKeyword, setSelectedKeyword] = useState<Keyword>(keywords[0]);\n\n  const [name, setName] = useState(props.action === \"add\" ? \"\" : data.title);\n  const [description, setDescription] = useState(\n    props.action === \"add\" ? \"\" : data.description\n  );\n  const [numberOfVideosPerRequest, setNumberOfVideosPerRequest] = useState(\n    selectedKeyword.numberOfVideosPerRequest\n  );\n  let selectedKeywordIndex = 0;\n\n  function onChangeNumber(event: React.ChangeEvent<HTMLInputElement>) {\n    setNumberOfVideosPerRequest(Number(event.target.value));\n  }\n\n  const [sourceLinks, setSourceLinks] = useState<string[]>(\n    selectedKeyword.sourceLinks\n  );\n  const [sourceLink, setSourceLInk] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\");\n  const [isOnMainPage, setIsOnMainPage] = useState(true);\n\n  function togglePage() {\n    setIsOnMainPage(!isOnMainPage);\n  }\n\n  function onChangeName(event: React.ChangeEvent<HTMLInputElement>) {\n    setName(event.target.value);\n  }\n  function onChangeDescription(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    setDescription(event.target.value);\n  }\n  function onChangeSourceLink(event: React.ChangeEvent<HTMLInputElement>) {\n    setSourceLInk(event.target.value);\n  }\n  function onChangeKeyword(event: React.ChangeEvent<HTMLInputElement>) {\n    setKeyword(event.target.value);\n  }\n\n  function addKeyword() {\n    if (keyword.length === 0) {\n      alert(\"link should not be empty!\");\n      return;\n    }\n    keywords.forEach((item) => {\n      if (item.keyword === keyword) {\n        alert(\"Don't add the same link\");\n        return;\n      }\n    });\n    if (keywords.length > 0) {\n      setKeywords([\n        ...keywords,\n        { keyword: keyword, numberOfVideosPerRequest: 0, sourceLinks: [] },\n      ]);\n    } else {\n      setKeywords([\n        { keyword: keyword, numberOfVideosPerRequest: 0, sourceLinks: [] },\n      ]);\n    }\n    setKeyword(\"\");\n  }\n\n  function deleteKeyword(e: React.MouseEvent<HTMLImageElement, MouseEvent>) {\n    const index = Number((e.target as HTMLButtonElement).id);\n    setKeywords([...keywords.slice(0, index), ...keywords.slice(index + 1)]);\n  }\n  function editKeyword(keyword: Keyword, index: number) {\n    setKeywords([\n      ...keywords.slice(0, index),\n      keyword,\n      ...keywords.slice(index + 1),\n    ]);\n  }\n  function addSourceLink() {\n    if (sourceLink.length === 0) {\n      alert(\"link should not be empty!\");\n      return;\n    }\n    if (sourceLinks.includes(sourceLink)) {\n      alert(\"Don't add the same link\");\n      return;\n    }\n\n    if (sourceLinks.length > 0) {\n      setSourceLinks([...sourceLinks, sourceLink]);\n    } else {\n      setSourceLinks([sourceLink]);\n    }\n    setSourceLInk(\"\");\n  }\n\n  function deleteSourceLink(e: React.MouseEvent<HTMLImageElement, MouseEvent>) {\n    const index = Number((e.target as HTMLButtonElement).id);\n    setSourceLinks([\n      ...sourceLinks.slice(0, index),\n      ...sourceLinks.slice(index + 1),\n    ]);\n  }\n\n  function submitHandler(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n  }\n\n  if (isOnMainPage) {\n    return (\n      <div className=\"container\" style={{ textAlign: \"center\" }}>\n        <h1>Configure your feed</h1>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h2>Parameters</h2>\n            {/* <form style={{ textAlign: \"left\" }}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"importSource\" className=\"form-label\">\n                  Import source\n                </label>\n                <input type=\"text\" className=\"form-control\" id=\"importSource\" />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn custom-button\"\n                style={{ margin: \"20px 0\" }}\n              >\n                IMPORT\n              </button>\n            </form> */}\n            <form\n              style={{ textAlign: \"left\" }}\n              onSubmit={(e) => submitHandler(e)}\n            >\n              <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label\">\n                  Name\n                </label>\n                {props.action === \"edit\" ? (\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={onChangeName}\n                    value={name}\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={onChangeName}\n                    value={name}\n                  />\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"description\" className=\"form-label\">\n                  Description\n                </label>\n                {props.action === \"edit\" ? (\n                  <textarea\n                    className=\"form-control\"\n                    id=\"description\"\n                    name=\"description\"\n                    rows={4}\n                    value={description}\n                    onChange={onChangeDescription}\n                  />\n                ) : (\n                  <textarea\n                    className=\"form-control\"\n                    id=\"description\"\n                    name=\"description\"\n                    rows={4}\n                    onChange={onChangeDescription}\n                    value={description}\n                  />\n                )}\n              </div>\n              {/* <div className=\"mb-3\">\n                <label htmlFor=\"numberOfRequests\" className=\"form-label\">\n                  Number of requests per video\n                </label>\n                {props.action === \"edit\" ? (\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"numberOfRequests\"\n                    name=\"numberOfRequests\"\n                    value={numberOfVideosPerRequest}\n                    onChange={onChangeNumber}\n                  />\n                ) : (\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"numberOfRequests\"\n                    name=\"numberOfRequests\"\n                    onChange={onChangeNumber}\n                    value={numberOfVideosPerRequest}\n                  />\n                )}\n              </div> */}\n              {/* <div className=\"mb-3\">\n                <label htmlFor=\"keyword\" className=\"form-label\">\n                  Keyword\n                </label>\n                {props.action === \"edit\" ? (\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"keyword\"\n                    name=\"keyword\"\n                    value={keyword}\n                    onChange={onChangeKeyword}\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"keyword\"\n                    name=\"keyword\"\n                    onChange={onChangeKeyword}\n                    value={keyword}\n                  />\n                )}\n              </div> */}\n              {/* <div className=\"mb-3\">\n                <label htmlFor=\"visibility\" className=\"form-label\">\n                  Visibility\n                </label>\n                <select className=\"form-select\" id=\"visibility\" name=\"visibility\">\n                  <option value=\"Public\">Public</option>\n                  <option value=\"Private\">Private</option>\n                </select>\n              </div> */}\n\n              <button\n                type=\"submit\"\n                className=\"btn custom-button\"\n                style={{ margin: \"20px 0\" }}\n                onClick={() => {\n                  if (\n                    name.length === 0 ||\n                    description.length === 0 ||\n                    keywords.length === 0\n                  ) {\n                    alert(\"Fill out all the required fields\");\n                    return;\n                  }\n\n                  if (props.action === \"add\") {\n                    dispatch(\n                      addFeed({\n                        id: myFeeds.length,\n                        title: name,\n                        description: description,\n                        // numberOfVideosPerRequest: numberOfVideosPerRequest,\n                        keywords: keywords,\n                        // sourceLinks: sourceLinks,\n                      })\n                    );\n                  } else if (props.action === \"edit\") {\n                    dispatch(\n                      editFeed({\n                        id: data.id,\n                        title: name,\n                        description: description,\n                        // numberOfVideosPerRequest: numberOfVideosPerRequest,\n                        keywords: keywords,\n                        // sourceLinks: sourceLinks,\n                      })\n                    );\n                  }\n                  navigate(\"/\");\n                }}\n              >\n                SAVE\n              </button>\n            </form>\n          </div>\n\n          <div className=\"col\">\n            <h2>Add configuration</h2>\n            <form\n              style={{ textAlign: \"left\" }}\n              onSubmit={(e) => submitHandler(e)}\n            >\n              <div className=\"mb-3\">\n                <label htmlFor=\"source\" className=\"form-label\">\n                  configuration\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"source\"\n                  name=\"source\"\n                  value={keyword}\n                  onChange={onChangeKeyword}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn custom-button\"\n                style={{ margin: \"20px 0\" }}\n                onClick={addKeyword}\n              >\n                ADD\n              </button>\n            </form>\n            <h2>Configurations</h2>\n            <form\n              style={{ textAlign: \"left\" }}\n              onSubmit={(e) => submitHandler(e)}\n            >\n              {keywords.map((item, ind) => {\n                return (\n                  <div className=\"mb-3 d-flex\">\n                    <img\n                      src=\"https://cdn-icons-png.flaticon.com/512/1214/1214428.png?w=360\"\n                      width=\"22px\"\n                      style={{ margin: \"0px 10px\" }}\n                      alt=\"img\"\n                      id={ind + \"\"}\n                      onClick={(e) => deleteKeyword(e)}\n                    />\n                    <div\n                      style={{ borderBottom: \"1px solid rgb(50, 191, 243)\" }}\n                      onClick={() => {\n                        setSelectedKeyword(item);\n                        togglePage();\n                        selectedKeywordIndex = ind;\n                      }}\n                    >\n                      {item.keyword}\n                    </div>\n                  </div>\n                );\n              })}\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\" style={{ textAlign: \"center\" }}>\n        <h1>Edit configuration</h1>\n        <form style={{ textAlign: \"left\" }} onSubmit={(e) => submitHandler(e)}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"numberOfRequests\" className=\"form-label\">\n              Number of requests per video\n            </label>\n            {props.action === \"edit\" ? (\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"numberOfRequests\"\n                name=\"numberOfRequests\"\n                value={numberOfVideosPerRequest}\n                onChange={onChangeNumber}\n              />\n            ) : (\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"numberOfRequests\"\n                name=\"numberOfRequests\"\n                onChange={onChangeNumber}\n                value={numberOfVideosPerRequest}\n              />\n            )}\n          </div>\n        </form>\n        <h2>Add source</h2>\n        <form style={{ textAlign: \"left\" }} onSubmit={(e) => submitHandler(e)}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"source\" className=\"form-label\">\n              source\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"source\"\n              name=\"source\"\n              value={sourceLink}\n              onChange={onChangeSourceLink}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn custom-button\"\n            style={{ margin: \"20px 0\" }}\n            onClick={addSourceLink}\n          >\n            ADD\n          </button>\n        </form>\n        <h2>sources</h2>\n        <form style={{ textAlign: \"left\" }} onSubmit={(e) => submitHandler(e)}>\n          {sourceLinks.map((item, ind) => {\n            return (\n              <div className=\"mb-3 d-flex\">\n                <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/1214/1214428.png?w=360\"\n                  width=\"22px\"\n                  style={{ margin: \"0px 10px\" }}\n                  alt=\"img\"\n                  id={ind + \"\"}\n                  onClick={(e) => deleteSourceLink(e)}\n                />\n                <div style={{ borderBottom: \"1px solid rgb(50, 191, 243)\" }}>\n                  {item}\n                </div>\n              </div>\n            );\n          })}\n          <button\n            type=\"submit\"\n            className=\"btn custom-button\"\n            style={{ margin: \"20px 0\" }}\n            onClick={() => {\n              const newKeyword: Keyword = {\n                keyword: selectedKeyword.keyword,\n                numberOfVideosPerRequest: numberOfVideosPerRequest,\n                sourceLinks: sourceLinks\n              };\n              editKeyword(newKeyword, selectedKeywordIndex);\n            }}\n          >\n            SAVE\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ConfigurationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}