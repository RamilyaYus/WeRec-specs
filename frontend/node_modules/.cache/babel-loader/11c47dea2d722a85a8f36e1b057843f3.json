{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { currentNavbarItemReducer, currentTabItemReducer } from \"./reducerActions\";\nexport const store = configureStore({\n  reducer: {\n    currentNavbarItem: currentNavbarItemReducer,\n    currentTabItem: currentTabItemReducer // currentDetailedPage: currentDetailedPageReducer,\n    // currentFeed: currentFeedReducer\n\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"names":["configureStore","currentNavbarItemReducer","currentTabItemReducer","store","reducer","currentNavbarItem","currentTabItem"],"sources":["/Users/ripperoni/Documents/Web/Web Development/we-rec/src/globalState/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport {currentNavbarItemReducer, currentTabItemReducer} from \"./reducerActions\"\n\nexport const store = configureStore({\n  reducer: {\n    currentNavbarItem: currentNavbarItemReducer,\n    currentTabItem: currentTabItemReducer,\n    // currentDetailedPage: currentDetailedPageReducer,\n    // currentFeed: currentFeedReducer\n}})\n\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAAQC,wBAAR,EAAkCC,qBAAlC,QAA8D,kBAA9D;AAEA,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACPC,iBAAiB,EAAEJ,wBADZ;IAEPK,cAAc,EAAEJ,qBAFT,CAGP;IACA;;EAJO;AADyB,CAAD,CAA5B,C,CASP"},"metadata":{},"sourceType":"module"}