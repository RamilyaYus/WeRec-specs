{"ast":null,"code":"var _jsxFileName = \"/Users/ripperoni/Documents/Web/Web Development/we-rec/src/components/pages/ConfigurationPage.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../globalState/hooks\";\nimport { addFeed, editFeed } from \"../../globalState/reducerActions\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConfigurationPage(props) {\n  _s();\n\n  const data = useAppSelector(state => state.currentDetailedPage);\n  const myFeeds = useAppSelector(state => state.myFeeds);\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const [name, setName] = useState(props.action === \"add\" ? \"\" : data.title);\n  const [description, setDescription] = useState(props.action === \"add\" ? \"\" : data.description); // const [numberOfVideosPerRequest, setNumberOfVideosPerRequest] = useState(\n  //   props.action === \"add\" ? 0 : data.numberOfVideosPerRequest\n  // );\n\n  const [keywords, setKeywords] = useState(props.action === \"add\" ? [] : data.keywords); // const [sourceLinks, setSourceLinks] = useState<string[]>(\n  //   props.action === \"add\" ? [] : data.sourceLinks\n  // );\n  // const [sourceLink, setSourceLInk] = useState(\"\");\n\n  const [keyword, setKeyword] = useState(\"\");\n  const [isOnMainPage, setIsOnMainPage] = useState(true);\n  let selectedKeyword;\n\n  function togglePage() {\n    setIsOnMainPage(!isOnMainPage);\n  }\n\n  function onChangeName(event) {\n    setName(event.target.value);\n  } // function onChangeKeyword(event: React.ChangeEvent<HTMLInputElement>) {\n  //   setKeyword(event.target.value);\n  // }\n  // function onChangeNumber(event: React.ChangeEvent<HTMLInputElement>) {\n  //   setNumberOfVideosPerRequest(Number(event.target.value));\n  // }\n\n\n  function onChangeDescription(event) {\n    setDescription(event.target.value);\n  } // function onChangeSourceLink(event: React.ChangeEvent<HTMLInputElement>) {\n  //   setSourceLInk(event.target.value);\n  // }\n\n\n  function onChangeKeyword(event) {\n    setKeyword(event.target.value);\n  }\n\n  function goToKeywordConfig() {// if(props.action === \"edit\"){\n    //   navigate(`/feed/configuration/edit/keyword/${data.id}`)\n    // }\n    // else if(props.action === \"add\"){\n    //   navigate(`/feed/configuration/add/keyword/${data.id}`)\n    // }\n  }\n\n  function addKeyword() {\n    if (keyword.length === 0) {\n      alert(\"link should not be empty!\");\n      return;\n    }\n\n    keywords.forEach(item => {\n      if (item.keyword === keyword) {\n        alert(\"Don't add the same link\");\n        return;\n      }\n    });\n\n    if (keywords.length > 0) {\n      setKeywords([...keywords, {\n        keyword: keyword,\n        numberOfVideosPerRequest: 0,\n        sourceLinks: []\n      }]);\n    } else {\n      setKeywords([{\n        keyword: keyword,\n        numberOfVideosPerRequest: 0,\n        sourceLinks: []\n      }]);\n    }\n\n    setKeyword(\"\");\n  }\n\n  function deleteKeyword(e) {\n    const index = Number(e.target.id);\n    setKeywords([...keywords.slice(0, index), ...keywords.slice(index + 1)]);\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n  }\n\n  if (isOnMainPage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Configure your feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: \"left\"\n            },\n            onSubmit: e => submitHandler(e),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: \"form-label\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), props.action === \"edit\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"name\",\n                name: \"name\",\n                onChange: onChangeName,\n                value: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"name\",\n                name: \"name\",\n                onChange: onChangeName,\n                value: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                className: \"form-label\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), props.action === \"edit\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                id: \"description\",\n                name: \"description\",\n                rows: 4,\n                value: description,\n                onChange: onChangeDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                id: \"description\",\n                name: \"description\",\n                rows: 4,\n                onChange: onChangeDescription,\n                value: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn custom-button\",\n              style: {\n                margin: \"20px 0\"\n              },\n              onClick: () => {\n                if (name.length === 0 || description.length === 0 || keywords.length === 0) {\n                  alert(\"Fill out all the required fields\");\n                  return;\n                }\n\n                if (props.action === \"add\") {\n                  dispatch(addFeed({\n                    id: myFeeds.length,\n                    title: name,\n                    description: description,\n                    // numberOfVideosPerRequest: numberOfVideosPerRequest,\n                    keywords: keywords // sourceLinks: sourceLinks,\n\n                  }));\n                } else if (props.action === \"edit\") {\n                  dispatch(editFeed({\n                    id: data.id,\n                    title: name,\n                    description: description,\n                    // numberOfVideosPerRequest: numberOfVideosPerRequest,\n                    keywords: keywords // sourceLinks: sourceLinks,\n\n                  }));\n                }\n\n                navigate(\"/\");\n              },\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: \"left\"\n            },\n            onSubmit: e => submitHandler(e),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"source\",\n                className: \"form-label\",\n                children: \"configuration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"source\",\n                name: \"source\",\n                value: keyword,\n                onChange: onChangeKeyword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn custom-button\",\n              style: {\n                margin: \"20px 0\"\n              },\n              onClick: addKeyword,\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Configurations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: \"left\"\n            },\n            onSubmit: e => submitHandler(e),\n            children: keywords.map((item, ind) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://cdn-icons-png.flaticon.com/512/1214/1214428.png?w=360\",\n                  width: \"22px\",\n                  style: {\n                    margin: \"0px 10px\"\n                  },\n                  alt: \"img\",\n                  id: ind + \"\",\n                  onClick: e => deleteKeyword(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    borderBottom: \"1px solid rgb(50, 191, 243)\"\n                  },\n                  onClick: () => {\n                    selectedKeyword = item;\n                    togglePage();\n                  },\n                  children: item.keyword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(ConfigurationPage, \"pOyV3avNETfM+bjG7ri1MfIRqLc=\", false, function () {\n  return [useAppSelector, useAppSelector, useNavigate, useAppDispatch];\n});\n\n_c = ConfigurationPage;\nexport default ConfigurationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigurationPage\");","map":{"version":3,"names":["React","useAppSelector","useAppDispatch","addFeed","editFeed","useState","useNavigate","ConfigurationPage","props","data","state","currentDetailedPage","myFeeds","navigate","dispatch","name","setName","action","title","description","setDescription","keywords","setKeywords","keyword","setKeyword","isOnMainPage","setIsOnMainPage","selectedKeyword","togglePage","onChangeName","event","target","value","onChangeDescription","onChangeKeyword","goToKeywordConfig","addKeyword","length","alert","forEach","item","numberOfVideosPerRequest","sourceLinks","deleteKeyword","e","index","Number","id","slice","submitHandler","preventDefault","textAlign","margin","map","ind","borderBottom"],"sources":["/Users/ripperoni/Documents/Web/Web Development/we-rec/src/components/pages/ConfigurationPage.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../globalState/hooks\";\nimport { addFeed, editFeed } from \"../../globalState/reducerActions\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {Keyword} from \"../interfaces/Feed\"\n\ninterface ConfigurationPage {\n  action: \"add\" | \"edit\";\n}\n\nfunction ConfigurationPage(props: ConfigurationPage) {\n  const data = useAppSelector((state) => state.currentDetailedPage);\n  const myFeeds = useAppSelector((state) => state.myFeeds);\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n\n  const [name, setName] = useState(props.action === \"add\" ? \"\" : data.title);\n  const [description, setDescription] = useState(\n    props.action === \"add\" ? \"\" : data.description\n  );\n  // const [numberOfVideosPerRequest, setNumberOfVideosPerRequest] = useState(\n  //   props.action === \"add\" ? 0 : data.numberOfVideosPerRequest\n  // );\n  const [keywords, setKeywords] = useState<Keyword[]>(\n    props.action === \"add\" ? [] : data.keywords\n  );\n  // const [sourceLinks, setSourceLinks] = useState<string[]>(\n  //   props.action === \"add\" ? [] : data.sourceLinks\n  // );\n  // const [sourceLink, setSourceLInk] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\")\n  const [isOnMainPage, setIsOnMainPage] = useState(true)\n  let selectedKeyword: Keyword\n  \n  function togglePage(){\n    setIsOnMainPage(!isOnMainPage)\n  }\n\n  function onChangeName(event: React.ChangeEvent<HTMLInputElement>) {\n    setName(event.target.value);\n  }\n  // function onChangeKeyword(event: React.ChangeEvent<HTMLInputElement>) {\n  //   setKeyword(event.target.value);\n  // }\n  // function onChangeNumber(event: React.ChangeEvent<HTMLInputElement>) {\n  //   setNumberOfVideosPerRequest(Number(event.target.value));\n  // }\n  function onChangeDescription(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    setDescription(event.target.value);\n  }\n  // function onChangeSourceLink(event: React.ChangeEvent<HTMLInputElement>) {\n  //   setSourceLInk(event.target.value);\n  // }\n  function onChangeKeyword(event: React.ChangeEvent<HTMLInputElement>){\n    setKeyword(event.target.value)\n  }\n  function goToKeywordConfig(){\n    // if(props.action === \"edit\"){\n    //   navigate(`/feed/configuration/edit/keyword/${data.id}`)\n    // }\n    // else if(props.action === \"add\"){\n    //   navigate(`/feed/configuration/add/keyword/${data.id}`)\n    // }\n  }\n\n  function addKeyword() {\n    if (keyword.length === 0) {\n      alert(\"link should not be empty!\")\n      return;\n    }\n    keywords.forEach(item => {\n      if(item.keyword === keyword){\n        alert(\"Don't add the same link\")\n        return\n      }\n      \n    })\n    if (keywords.length > 0) {\n      setKeywords([...keywords, {keyword: keyword, numberOfVideosPerRequest: 0, sourceLinks: []}])\n    } else {\n      setKeywords([{keyword: keyword, numberOfVideosPerRequest: 0, sourceLinks: []}])\n    }\n    setKeyword(\"\");\n  }\n\n  function deleteKeyword(e: React.MouseEvent<HTMLImageElement, MouseEvent>){\n    const index = Number((e.target as HTMLButtonElement).id);\n    setKeywords([\n      ...keywords.slice(0, index),\n      ...keywords.slice(index + 1),\n    ])\n  }\n\n  \n\n  function submitHandler(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n  }\n\n  if(isOnMainPage){\n    return (\n      <div className=\"container\" style={{ textAlign: \"center\" }}>\n        <h1>Configure your feed</h1>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h2>Parameters</h2>\n            {/* <form style={{ textAlign: \"left\" }}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"importSource\" className=\"form-label\">\n                  Import source\n                </label>\n                <input type=\"text\" className=\"form-control\" id=\"importSource\" />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn custom-button\"\n                style={{ margin: \"20px 0\" }}\n              >\n                IMPORT\n              </button>\n            </form> */}\n            <form\n              style={{ textAlign: \"left\" }}\n              onSubmit={(e) => submitHandler(e)}\n            >\n              <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label\">\n                  Name\n                </label>\n                {props.action === \"edit\" ? (\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={onChangeName}\n                    value={name}\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={onChangeName}\n                    value={name}\n                  />\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"description\" className=\"form-label\">\n                  Description\n                </label>\n                {props.action === \"edit\" ? (\n                  <textarea\n                    className=\"form-control\"\n                    id=\"description\"\n                    name=\"description\"\n                    rows={4}\n                    value={description}\n                    onChange={onChangeDescription}\n                  />\n                ) : (\n                  <textarea\n                    className=\"form-control\"\n                    id=\"description\"\n                    name=\"description\"\n                    rows={4}\n                    onChange={onChangeDescription}\n                    value={description}\n                  />\n                )}\n              </div>\n              {/* <div className=\"mb-3\">\n                <label htmlFor=\"numberOfRequests\" className=\"form-label\">\n                  Number of requests per video\n                </label>\n                {props.action === \"edit\" ? (\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"numberOfRequests\"\n                    name=\"numberOfRequests\"\n                    value={numberOfVideosPerRequest}\n                    onChange={onChangeNumber}\n                  />\n                ) : (\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"numberOfRequests\"\n                    name=\"numberOfRequests\"\n                    onChange={onChangeNumber}\n                    value={numberOfVideosPerRequest}\n                  />\n                )}\n              </div> */}\n              {/* <div className=\"mb-3\">\n                <label htmlFor=\"keyword\" className=\"form-label\">\n                  Keyword\n                </label>\n                {props.action === \"edit\" ? (\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"keyword\"\n                    name=\"keyword\"\n                    value={keyword}\n                    onChange={onChangeKeyword}\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"keyword\"\n                    name=\"keyword\"\n                    onChange={onChangeKeyword}\n                    value={keyword}\n                  />\n                )}\n              </div> */}\n              {/* <div className=\"mb-3\">\n                <label htmlFor=\"visibility\" className=\"form-label\">\n                  Visibility\n                </label>\n                <select className=\"form-select\" id=\"visibility\" name=\"visibility\">\n                  <option value=\"Public\">Public</option>\n                  <option value=\"Private\">Private</option>\n                </select>\n              </div> */}\n  \n              <button\n                type=\"submit\"\n                className=\"btn custom-button\"\n                style={{ margin: \"20px 0\" }}\n                onClick={() => {\n                  if (\n                    name.length === 0 ||\n                    description.length === 0 ||\n                    keywords.length === 0 \n  \n                  ) {\n                    alert(\"Fill out all the required fields\");\n                    return;\n                  }\n  \n                  if (props.action === \"add\") {\n                    dispatch(\n                      addFeed({\n                        id: myFeeds.length,\n                        title: name,\n                        description: description,\n                        // numberOfVideosPerRequest: numberOfVideosPerRequest,\n                        keywords: keywords,\n                        // sourceLinks: sourceLinks,\n                      })\n                    );\n                  } else if (props.action === \"edit\") {\n                    dispatch(\n                      editFeed({\n                        id: data.id,\n                        title: name,\n                        description: description,\n                        // numberOfVideosPerRequest: numberOfVideosPerRequest,\n                        keywords: keywords,\n                        // sourceLinks: sourceLinks,\n                      })\n                    );\n                  }\n                  navigate(\"/\");\n                }}\n              >\n                SAVE\n              </button>\n            </form>\n          </div>\n  \n          <div className=\"col\">\n            <h2>Add configuration</h2>\n            <form\n              style={{ textAlign: \"left\" }}\n              onSubmit={(e) => submitHandler(e)}\n            >\n              <div className=\"mb-3\">\n                <label htmlFor=\"source\" className=\"form-label\">\n                  configuration\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"source\"\n                  name=\"source\"\n                  value={keyword}\n                  onChange={onChangeKeyword}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn custom-button\"\n                style={{ margin: \"20px 0\" }}\n                onClick={addKeyword}\n              >\n                ADD\n              </button>\n            </form>\n            <h2>Configurations</h2>\n            <form\n              style={{ textAlign: \"left\" }}\n              onSubmit={(e) => submitHandler(e)}\n            >\n              {keywords.map((item, ind) => {\n                return (\n                  <div className=\"mb-3 d-flex\">\n                    <img\n                      src=\"https://cdn-icons-png.flaticon.com/512/1214/1214428.png?w=360\"\n                      width=\"22px\"\n                      style={{ margin: \"0px 10px\" }}\n                      alt=\"img\"\n                      id={ind + \"\"}\n                      onClick={(e) => deleteKeyword(e)}\n                    />\n                    <div style={{ borderBottom: \"1px solid rgb(50, 191, 243)\" }} onClick={() => {\n                      selectedKeyword = item\n                      togglePage()\n                    }}>\n                      {item.keyword}\n                    </div>\n                  </div>\n                );\n              })}\n            </form>\n          </div>\n        </div>\n      </div>\n            \n    );\n\n  }\n \n}\n\nexport default ConfigurationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}