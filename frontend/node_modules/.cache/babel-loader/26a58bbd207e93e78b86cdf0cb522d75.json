{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { currentNavbarItemReducer, currentTabItemReducer, currentDetailedPageReducer, myFeedsReducer } from \"./reducerActions\";\nexport const store = configureStore({\n  reducer: {\n    currentNavbarItem: currentNavbarItemReducer,\n    currentTabItem: currentTabItemReducer,\n    currentDetailedPage: currentDetailedPageReducer,\n    myFeedsReducer: myFeedsReducer // currentFeed: currentFeedReducer\n\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"names":["configureStore","currentNavbarItemReducer","currentTabItemReducer","currentDetailedPageReducer","myFeedsReducer","store","reducer","currentNavbarItem","currentTabItem","currentDetailedPage"],"sources":["/Users/ripperoni/Documents/Web/Web Development/we-rec/src/globalState/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport {currentNavbarItemReducer, currentTabItemReducer, currentDetailedPageReducer, myFeedsReducer} from \"./reducerActions\"\n\nexport const store = configureStore({\n  reducer: {\n    currentNavbarItem: currentNavbarItemReducer,\n    currentTabItem: currentTabItemReducer,\n    currentDetailedPage: currentDetailedPageReducer,\n    myFeedsReducer: myFeedsReducer\n    // currentFeed: currentFeedReducer\n}})\n\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAAQC,wBAAR,EAAkCC,qBAAlC,EAAyDC,0BAAzD,EAAqFC,cAArF,QAA0G,kBAA1G;AAEA,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPC,iBAAiB,EAAEN,wBADZ;IAEPO,cAAc,EAAEN,qBAFT;IAGPO,mBAAmB,EAAEN,0BAHd;IAIPC,cAAc,EAAEA,cAJT,CAKP;;EALO;AADyB,CAAD,CAA5B,C,CAUP"},"metadata":{},"sourceType":"module"}